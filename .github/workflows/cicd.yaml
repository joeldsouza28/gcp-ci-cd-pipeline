name: CI/CD Pipeline for Artifact Registry and Cloud Run

on: 
  push: 
    branches: ["master"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest


    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.3 

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform
    
    - name: Terraform Create Registry
      run: terraform apply -target=google_artifact_registry_repository.fastapi_repo -auto-approve
      working-directory: terraform
      env:
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}
        TF_VAR_region: us-central1

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: terraform
      env:
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}
        TF_VAR_region: us-central1

    - name: Build Docker image
      run: |
        docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/fastapi-cicd/fastapi-cicd:latest .

    - name: Push Docker image to Artifact Registry
      run: |
        docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/fastapi-cicd/fastapi-cicd:latest

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve tfplan
      working-directory: terraform
      env:
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}
        TF_VAR_region: us-central1

    - name: Publish CI/CD Event to Pub/Sub
      if: always()
      run: |
        STATUS="success"
        if [ "${{ job.status }}" != "success" ]; then
          STATUS="failure"
        fi

        gcloud pubsub topics publish ci-cd-events \
          --message="{\"status\":\"$STATUS\",\"commit\":\"${GITHUB_SHA}\",\"repo\":\"${GITHUB_REPOSITORY}\"}" \
          --project=${{ secrets.GCP_PROJECT }}

        gcloud pubsub topics publish ci-cd-events \
          --message="{\"event\":\"build_success\",\"commit\":\"${GITHUB_SHA}\"}" \
          --project=${{ secrets.GCP_PROJECT }}
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        